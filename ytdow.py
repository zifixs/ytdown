from hikkatl.types import Message  
from .. import loader, utils  
import yt_dlp  
import re  

@loader.tds  
class YTDownloaderMod(loader.Module):  
    """–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ —Å YouTube"""  

    strings = {  
        "name": "YTDownloader",  
        "args_err": "‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube! –ü—Ä–∏–º–µ—Ä: <code>.yt https://youtu.be/...</code>",  
        "downloading": "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞—é...",  
        "error": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏. –ü—Ä–æ–≤–µ—Ä—å —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.",  
    }  

    async def ytcmd(self, message: Message):  
        """<—Å—Å—ã–ª–∫–∞> [–∫–∞—á–µ—Å—Ç–≤–æ] ‚Äî —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ (–∏–ª–∏ –∞—É–¥–∏–æ)"""  
        args = utils.get_args_raw(message)  
        if not args:  
            await utils.answer(message, self.strings["args_err"])  
            return  

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube  
        if not re.match(r"(https?://)?(www\.)?(youtube\.com|youtu\.be)/.+", args):  
            await utils.answer(message, "‚ùå –≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube!")  
            return  

        await utils.answer(message, self.strings["downloading"])  

        try:  
            ydl_opts = {  
                "format": "best",  # –õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ 'bestaudio' –¥–ª—è –∞—É–¥–∏–æ)  
                "outtmpl": "downloads/%(title)s.%(ext)s",  
                "quiet": True,  
            }  

            with yt_dlp.YoutubeDL(ydl_opts) as ydl:  
                info = ydl.extract_info(args, download=True)  
                filename = ydl.prepare_filename(info)  

            await message.client.send_file(  
                message.peer_id,  
                file=filename,  
                caption=f"üé¨ {info['title']}",  
            )  

        except Exception as e:  
            await utils.answer(message, f"{self.strings['error']}\n–û—à–∏–±–∫–∞: {str(e)}")   